version: "3"

services:
    db:
        image: postgres:12
        volumes:
            - ./motivo_postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        # networks:
        #     - private

    django:
        build:
            dockerfile: ./Dockerfile
            context: .
        command: bash -c "python manage.py makemigrations; python manage.py migrate; python manage.py collectstatic --noinput ; gunicorn practice.wsgi:application --bind 0.0.0.0:8000 --reload"
        volumes:
            - ./uploads:/code/uploads
            - ./app/practice/static:/static
        depends_on:
            - db
        ports:
            - "8000:8000"
        # stdin_open: true
        # tty: true
        # restart: on-failure
        # networks:
        #     - private
        #     - traefik_webgateway
        # environment:
        #     DEBUG: 'true'
        # labels:
        #     - traefik.enable=true
        #     - traefik.http.routers.${CONTAINER_NAME}-api-web.rule=Host(`${API_HOST}`)
        #     - traefik.http.routers.${CONTAINER_NAME}-api-web.entrypoints=web
        #     # - traefik.http.services.${CONTAINER_NAME}-api-web.loadbalancer.server.port=8000
        #     # https is optional, delete next lines when you don't need this
        #     - traefik.http.middlewares.${CONTAINER_NAME}-api-redirect-websecure.redirectscheme.scheme=https
        #     - traefik.http.routers.${CONTAINER_NAME}-api-web.middlewares=${CONTAINER_NAME}-api-redirect-websecure
        #     - traefik.http.routers.${CONTAINER_NAME}-api-websecure.rule=Host(`${API_HOST}`)
        #     - traefik.http.routers.${CONTAINER_NAME}-api-websecure.tls=true 
        #     - traefik.http.routers.${CONTAINER_NAME}-api-websecure.entrypoints=websecure
        

#     nginx_django:
#         container_name: ${CONTAINER_NAME}nginx_django
#         build:
#             dockerfile: ./Nginx.Dockerfile
#             context: .
#         volumes:
#             # - .:/code
#             - ./app/practice/static:/static
#         depends_on:
#             - django
#         networks:
#             - private
#             - traefik_webgateway
#         # restart: "on-failure"
#         labels:
#             - traefik.enable=true
#             - traefik.http.routers.${CONTAINER_NAME}-static-web.rule=Host(`${STATIC_URL}`)
#             - traefik.http.routers.${CONTAINER_NAME}-static-web.entrypoints=web
#             # - traefik.http.services.${CONTAINER_NAME}-static-web.loadbalancer.server.port=8000
#             # https is optional, delete next lines when you don't need this
#             - traefik.http.middlewares.${CONTAINER_NAME}-static-redirect-websecure.redirectscheme.scheme=https
#             - traefik.http.routers.${CONTAINER_NAME}-static-web.middlewares=${CONTAINER_NAME}-static-redirect-websecure
#             - traefik.http.routers.${CONTAINER_NAME}-static-websecure.rule=Host(`${STATIC_URL}`)
#             - traefik.http.routers.${CONTAINER_NAME}-static-websecure.tls=true
#             - traefik.http.routers.${CONTAINER_NAME}-static-websecure.entrypoints=websecure

# networks:
#     traefik_webgateway:
#         external: true
#     private:
#         driver: bridge

volumes:
    redis:
    archiwum_postgres:
        external: true
